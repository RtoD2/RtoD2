<h1><%= @game.name %></h1>

<% if @game.active_player %>
	<% if @game.active_player == @game.white_player %>
		<h3 id="active-player">White (<%= @game.active_player.email %>) to move</h3>
	<% elsif @game.active_player == @game.black_player %>
		<h3 id="active-player">Black (<%= @game.active_player.email %>) to move</h3>
	<% end %>
<% end %>	


<h3 class="checkalert" style="display:none;"></h3> 
<br>
<div class="chess_board_container">
	<table class="chess_board_table">
		
		<% for position_y in 8.downto(1) %>
			<% 
				if position_y % 2 == 0
					dark_square = false
				else
					dark_square = true
				end
			%>
			<tr>
			<% for position_x in 1..8 %>
				<% 
					if dark_square == true
						color_class = "dark_square"
						dark_square = false
					else
						color_class = "light_square"
						dark_square = true
					end
				%>
				<td>
					<div data-position-x=<%= position_x %> data-position-y=<%= position_y %> class="board_square <%= color_class %>">
						<% is_piece = @game.pieces.where(position_x: position_x, position_y: position_y).first %>
						<% if is_piece %>
								<div id="piece-<%=is_piece.id %>" class="piece" data-piece-id=<%=is_piece.id %> data-position-x=<%= is_piece.position_x %> data-position-y=<%= is_piece.position_y %> ></div>	
						<% end %>
						
					</div>
				</td>	
			<% end %>
			</tr>	
		<% end %>

	</table>

	<table class="x_axis_labels">
		<tr>
			<% 
				arr_x_labels = {
					1 => 'a',
					2 => 'b',
					3 => 'c',
					4 => 'd',
					5 => 'e',
					6 => 'f',
					7 => 'g',
					8 => 'h'
				}
			%>	
			<% for i in 1..8 %>
				<td><div class="label_square"><%= arr_x_labels[i] %></div></td>
			<% end %>

		</tr>
	</table>

	<table class="y_axis_labels">
		<% for i in 8.downto(1) %>
			<tr>
				<td><div class="label_square"><%= i %></div></td>
			</tr>
		<% end %>
		
	</table>

</div> <!-- close chess_board_container div -->
<br><br><br>

<div class="whitepromotion" style="display: none;" >
<h2 class="text-center">You can promote your pawn</h2>
	<div class="container">
    <div class="text-center">
			<div class="btn btn-default choosepiece" data-piece-type="Rook">♖</div>
			<div class="btn btn-default choosepiece" data-piece-type="Knight">♘</div>
			<div class="btn btn-default choosepiece" data-piece-type="Bishop">♗</div>
			<div class="btn btn-default choosepiece" data-piece-type="Queen">♕</div>
		</div>
	</div>
</div>

<div class="blackpromotion" style="display: none;">
<h2 class="text-center">You can promote your pawn</h2>
	<div class="container">
    <div class="text-center">
			<div class="btn btn-default choosepiece" data-piece-type="Rook">♜</div>
			<div class="btn btn-default choosepiece" data-piece-type="Knight">♞</div>
			<div class="btn btn-default choosepiece" data-piece-type="Bishop">♝</div>
			<div class="btn btn-default choosepiece" data-piece-type="Queen">♛</div> 
		</div>
	</div>
</div>

<h1>White Player</h1>
<p><%= @game.white_player.email %></p>
<br />
<br />
<h1>Black Player</h1>
<% if @game.black_player == nil && @game.white_player_id != current_user.id %>
	<%= link_to 'Join Game', join_game_path(@game), method: :patch, class: 'btn btn-success' %>
<% elsif @game.black_player != nil %>
	<p><%= @game.black_player.email %></p>
<% end %>
<br />
<br />
<script>
	
	var pieceCodes = {
		white: 
		{
			'pawn': '&#9817;',
		 	'rook': '&#9814;',
		 	'knight': '&#9816;',
		 	'bishop': '&#9815;',
		 	'queen': '&#9813;',
		 	'king': '&#9812;'
		},
		black: 
		{
			'pawn': '&#9823;',
		 	'rook': '&#9820;',
		 	'knight': '&#9822;',
		 	'bishop': '&#9821;',
		 	'queen': '&#9819;',
		 	'king': '&#9818;'
		}
	}
	
	function drawPieces(){
		$('.piece').html('');
		$.ajax({
      type: 'GET', 
      url: '<%= get_pieces_path(@game) %>',
      dataType: 'json',
      success: function(pieces) {
        $.each(pieces, function(index, piece){
        	var pieceColor;	
					if (piece.player_id == <%= @game.white_player_id %>){
						pieceColor = 'white';
					}
					else{
						pieceColor = 'black'
					}

					drawnPiece = $('.board_square[data-position-x='+ piece.position_x + '][data-position-y=' + piece.position_y + ']').children('.piece').html(pieceCodes[pieceColor][piece.type.toLowerCase()]).addClass(pieceColor);
					drawnPiece.attr('data-piece-color', pieceColor);
				});
      }, error: function (data) {
        console.log('Chess pieces failed to load!');
      }
    });
	}

	function gameStatus(){
		var checkAlert = $('.checkalert')
		$.ajax({
      type: 'GET', 
      url: '<%= status_game_path(@game) %>',
      dataType: 'json',
      success: function(data) {
      	if (data.is_in_check === true) {
      		checkAlert.css("display", "block");
      		var checkMessage = data.current_color_in_check + ' (' + data.current_player_in_check + ') in check';
      		checkAlert.html(checkMessage);
      	}
      	else {
      		checkAlert.css("display", "none");
      	}
      }, error: function (data) {
        console.log('Status failed to load!');
      }
    });
	}

	$(document).ready(function(){
		drawPieces();
		gameStatus();
		$('.dark_square').droppable({drop: dropPiece});
		$('.light_square').droppable({drop: dropPiece});
		updateActivePlayer();
	});

	$('.piece').on('drag',(function(){
		$(this).css('color', 'blue');
	}));

	$('.piece').on('dragstop', function() {
		$(this).css('color', 'black');
	} );

	function updateActivePlayer(){
		$.ajax({
      type: 'GET', 
      url: '<%= get_active_player_path(@game) %>',
      dataType: 'json',
      success: function(active_player_id) {
        var current_user_id = <%= current_user.id %>;
        var black_player_id = <%= @game.black_player_id %>;
        if(current_user_id == active_player_id){
        	if( active_player_id == black_player_id ){
        		$('.black').draggable({revert: true});
        	}
        	else{
        		$('.white').draggable({revert: true});
        	}
        }
        else{
        	$('.piece').draggable({ disabled: true });
        }
      }, error: function (data) {
        console.log('Failed to get active player!');
      }
    });
	}

	function dropPiece(event, ui) {
		var dest_x = $(this).data('position-x');
		var dest_y = $(this).data('position-y');
		var piece = ui.draggable;
		moveSelectedPiece(piece.data('piece-id'), dest_x, dest_y, piece);	
	  //updateActivePlayer();
	}

	function promotePawn(pieceId){
		var choosePiece = $('.choosepiece');
		choosePiece.click(function(event){
		var pieceType = $(event.target).data('piece-type');
			var data = {type:pieceType, _method: 'PATCH'};
			var pieceUrl = "/games/" + <%=@game.id%> + "/pieces/" + pieceId + "/promote"; 
			$.post(pieceUrl, data
				).success(function(data){
					$('.whitepromotion').css("display", "none");
					$('.blackpromotion').css("display", "none");
					drawPieces();
				});
		});		
	}
						
	function moveSelectedPiece(pieceId, dest_x, dest_y, selectedPiece){
		var data = {position_x: dest_x, position_y: dest_y, _method: 'PATCH'};
		var pieceUrl = "/games/" + <%=@game.id%> + "/pieces/" + pieceId + "/move"; 
		var castleMove;
		if ((selectedPiece.html().indexOf('♔') === 0 || selectedPiece.html().indexOf('♚') === 0) && Math.abs(selectedPiece[0].dataset.positionX - dest_x) == 2 && selectedPiece[0].dataset.positionY == dest_y){
			castleMove = true;
		}
		else {
			castleMove = false;
		}
		var enPassante;
		if ( (selectedPiece.html().indexOf('♙') === 0 || selectedPiece.html().indexOf('♟') === 0) && $('.board_square[data-position-x='+ dest_x + '][data-position-y=' + dest_y + ']').children().length < 1 && Math.abs(selectedPiece[0].dataset.positionX - dest_x) == 1 && Math.abs(selectedPiece[0].dataset.positionY - dest_y) == 1  ){
			enPassante = true;
		}
		else {
			enPassante = false;
		}

		var promotion; 
		if (selectedPiece.html().indexOf('♙') === 0 && dest_y === 8) {
			promotion = true;
		}
		else if (selectedPiece.html().indexOf('♟') === 0 && dest_y === 1) {
			promotion = true;
		}
		else {
			promotion = false;
		}
		
		$.post(pieceUrl, data
			).success(function(data){
				// move piece on screen - clone the piece and update the pos-x and pos-y values
				if (data.success){
					$('.board_square[data-position-x='+ selectedPiece[0].dataset.positionX + '][data-position-y=' + selectedPiece[0].dataset.positionY + ']').empty();
			
					selectedPiece.attr('data-position-x', dest_x);
					selectedPiece.attr('data-position-y', dest_y);

					$('.board_square[data-position-x='+ dest_x + '][data-position-y=' + dest_y + ']').html(selectedPiece[0]);

					if (castleMove) {
						if (dest_x == 7) {
							selectedRook = $('.board_square[data-position-x="8"][data-position-y=' + dest_y + ']').children();
							$('.board_square[data-position-x="8"][data-position-y=' + dest_y + ']').empty();
							selectedRook.attr('data-position-x', 6);
							$('.board_square[data-position-x="6"][data-position-y=' + dest_y + ']').html(selectedRook[0])
						}
						else {
							selectedRook = $('.board_square[data-position-x="1"][data-position-y=' + dest_y + ']').children();
							$('.board_square[data-position-x="1"][data-position-y=' + dest_y + ']').empty();
							selectedRook.attr('data-position-x', 4);
							$('.board_square[data-position-x="4"][data-position-y=' + dest_y + ']').html(selectedRook[0])
						}
					}

					if (enPassante) {
						if (dest_y == 6) {
							$('.board_square[data-position-x='+ dest_x +'][data-position-y="5"]').empty();
						}
						else {
							$('.board_square[data-position-x='+ dest_x +'][data-position-y="4"]').empty();
						}
					}

					if (promotion) {
						if (selectedPiece.html().indexOf('♙') === 0 ) {
							$('.whitepromotion').css("display", "block");
							promotePawn(pieceId);
						}
						else {
							$('.blackpromotion').css("display", "block");
						 	promotePawn(pieceId);
						}
					}

					gameStatus();
					
	        if (selectedPiece.attr('data-piece-color') === 'black') {
	        	$('#active-player').text('White\'s (' + '<%= @game.white_player.email %>' + ') move');
	        }
	        else {
	        	$('#active-player').text('Black\'s (' + '<%= @game.black_player.email %>' + ') move');		
	        }

	        updateActivePlayer();
	        
				}
				else{
					console.log('Invalid move!');
				}
			}).fail(function(data) {
		    console.log('failed move!');
	  });
		selectedPiece.css("color", "black");
		//$('.piece').draggable({revert: true});
	} 

</script>