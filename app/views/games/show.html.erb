<h1><%= @game.name %></h1>

<div class="chess_board_container">
	<table class="chess_board_table">
		
		<% for position_y in 8.downto(1) %>
			<% 
				if position_y % 2 == 0
					dark_square = false
				else
					dark_square = true
				end
			%>
			<tr>
			<% for position_x in 1..8 %>
				<% 
					if dark_square == true
						color_class = "dark_square"
						dark_square = false
					else
						color_class = "light_square"
						dark_square = true
					end
				%>
				<td>
					<div data-position-x=<%= position_x %> data-position-y=<%= position_y %> class="board_square <%= color_class %>">
						<% isPiece = @game.pieces.where(position_x: position_x, position_y: position_y).first %>
						<% if isPiece %>
								<div id="piece-<%=isPiece.id %>" class="piece" data-piece-id=<%=isPiece.id %> data-position-x=<%= isPiece.position_x %> data-position-y=<%= isPiece.position_y %> ></div>	
						<% end %>
						
					</div>
				</td>	
			<% end %>
			</tr>	
		<% end %>

	</table>

	<table class="x_axis_labels">
		<tr>
			<% 
				arr_x_labels = {
					1 => 'a',
					2 => 'b',
					3 => 'c',
					4 => 'd',
					5 => 'e',
					6 => 'f',
					7 => 'g',
					8 => 'h'
				}
			%>	
			<% for i in 1..8 %>
				<td><div class="label_square"><%= arr_x_labels[i] %></div></td>
			<% end %>

		</tr>
	</table>

	<table class="y_axis_labels">
		<% for i in 8.downto(1) %>
			<tr>
				<td><div class="label_square"><%= i %></div></td>
			</tr>
		<% end %>
		
	</table>
</div> <!-- close chess_board_container div -->

<h1>White Player</h1>
<p><%= @game.white_player.email %></p>
<br />
<br />
<h1>Black Player</h1>
<% if @game.black_player == nil %>
	<%= link_to 'Join Game', join_game_path(@game), method: :patch, class: 'btn btn-success' %>
<% else %>
	<p><%= @game.black_player.email %></p>
<% end %>
<br />
<br />

<script>
	
	var pieceCodes = {
		white: 
		{
			'pawn': '&#9817;',
		 	'rook': '&#9814;',
		 	'knight': '&#9816;',
		 	'bishop': '&#9815;',
		 	'queen': '&#9813;',
		 	'king': '&#9812;'
		},
		black: 
		{
			'pawn': '&#9823;',
		 	'rook': '&#9820;',
		 	'knight': '&#9822;',
		 	'bishop': '&#9821;',
		 	'queen': '&#9819;',
		 	'king': '&#9818;'
		}
	}
	
	function drawPieces(){
		$('.piece').html('');
		$.ajax({
      type: 'GET', 
      url: '<%= get_pieces_path(@game) %>',
      dataType: 'json',
      success: function(pieces) {
        $.each(pieces, function(index, piece){
        	var pieceColor;	
        	var selectedClass;
        	if (piece.is_selected == true){
        		selectedClass = 'selected-piece';
        	}			
					if (piece.player_id == <%= @game.white_player_id %>){
						pieceColor = 'white';
					}
					else{
						pieceColor = 'black'
					}

					drawnPiece = $('.board_square[data-position-x='+ piece.position_x + '][data-position-y=' + piece.position_y + ']').children('.piece').html(pieceCodes[pieceColor][piece.type.toLowerCase()]).addClass(selectedClass+' '+ pieceColor);
					drawnPiece.attr('data-piece-color', pieceColor);
				});
      }, error: function (data) {
        console.log('Chess pieces failed to load!');
      }
    });
	}

	$(document).ready(function(){
		drawPieces();
	});

	function getSelectedPiece(){
		var selectedPiece = $('.selected-piece');
		if( selectedPiece.length ){
			return selectedPiece;
		}
		else{
			return false;
		}
	}

	$('.chess_board_container').on('click', '.piece', function(){
		// TODO: should have check to make sure that only the active user's pieces are selected
		// and can only be selected during that user's turn
		selectedPiece = getSelectedPiece();

		if ( !selectedPiece ){
			toggleSelect(this.dataset.pieceId);
		}
		else{
			if (this.dataset.pieceId == selectedPiece[0].dataset.pieceId ){
				toggleSelect(this.dataset.pieceId, true);
			}
		}
	});

	$('.chess_board_container').on('click', '.board_square', function(){
		var selectedPiece = getSelectedPiece();
		if( selectedPiece ){
			var pieceId = selectedPiece[0].dataset.pieceId;
			var dest_x = this.dataset.positionX;
			var dest_y = this.dataset.positionY;
			moveSelectedPiece(pieceId, dest_x, dest_y, selectedPiece);
		}
	});


	function toggleSelect(pieceId, deselect = false){
		var pieceUrl = "/games/" + <%=@game.id%> + "/pieces/" + pieceId + "/select";
		console.log(pieceId);
		$.post(pieceUrl, {
				_method: "PATCH"
			}).success(function(data){
				if( $('.piece[data-piece-id=' + pieceId + ']').hasClass('selected-piece') ){
					deselect = true;
				}
				$('.piece').removeClass('selected-piece');
				if ( !deselect ){
					$('.piece[data-piece-id=' + pieceId + ']').addClass('selected-piece');
				}
		});
	} 

	function moveSelectedPiece(pieceId, dest_x, dest_y, selectedPiece){
		var data = {position_x: dest_x, position_y: dest_y, _method: 'PATCH'};
		var pieceUrl = "/games/" + <%=@game.id%> + "/pieces/" + pieceId + "/move"; 
		
		$.post(pieceUrl, data
			).success(function(data){
				// move piece on screen - clone the piece and update the pos-x and pos-y values
				if (data.success){
					$('.board_square[data-position-x='+ selectedPiece[0].dataset.positionX + '][data-position-y=' + selectedPiece[0].dataset.positionY + ']').empty();
			
					selectedPiece.attr('data-position-x', dest_x);
					selectedPiece.attr('data-position-y', dest_y);
					$('.board_square[data-position-x='+ dest_x + '][data-position-y=' + dest_y + ']').html(selectedPiece[0]);
				
					$('.piece').removeClass('selected-piece');
	        console.log('We have movement!');
				}
				else{
					console.log('Invalid move!');
				}
			}).fail(function(data) {
		    // we should undo the visual move in js if there was a failure
		    console.log('failed move!');
	  });

	} 


</script>